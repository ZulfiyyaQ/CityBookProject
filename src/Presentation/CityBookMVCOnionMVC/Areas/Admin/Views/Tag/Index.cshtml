@model PaginationVM<ItemTagVM>

@{
    int count = (Model.CurrentPage - 1) * Model.Take;
}

<div class="d-flex justify-content-end">
    <div class="input-group mx-3">
        <form asp-action="Index" asp-controller="Tag"
              asp-route-order="@Model.Order">
            <input type="text" class="form-control" placeholder="Search now" name="search" value="@(Model.Search == null? "":Model.Search)">
        </form>
    </div>

    <a asp-controller="Tag" asp-action="DeletedItems" class="btn btn-outline-warning"><strong>Deleted</strong></a>
</div>

<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Place Tags</h4>
            <a asp-controller="Tag" asp-action="Create" class="btn btn-outline-success">Create</a>
            <div class="table-responsive pt-3">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>
                                No
                            </th>

                            <th>
                                Name
                            </th>
                            <th>
                                Places Count
                            </th>
                            <th>
                                Settings
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in Model.Items)
                        {
                            count++;
                            <tr>
                                <td>
                                    @count
                                </td>

                                <td>
                                    @item.Name
                                </td>
                                <td>
                                    @item.Places.Count()
                                </td>

                                <td>
                                    <a asp-action="Update" asp-controller="Tag" asp-route-id="@item.Id" class="btn btn-outline-info">
                                        <i class="mdi mdi-lead-pencil"></i>
                                    </a>
                                    @if (User.IsInRole(AdminRoles.Admin.ToString()))
                                    {
                                        <a asp-action="SoftDelete" asp-controller="Tag" asp-route-id="@item.Id" class="btn btn-outline-warning">
                                            <i class="mdi mdi-delete-sweep"></i>
                                        </a>
                                    }
                                    <a asp-action="Detail" asp-controller="Tag" asp-route-id="@item.Id" class="btn btn-outline-dark">
                                        <i class="mdi mdi-book-open-page-variant"></i>
                                    </a>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : "")"><a class="page-link" asp-route-page="@(Model.CurrentPage -1)" asp-action="Index" asp-controller="Tag">Previous</a></li>
                    @for (int i = 1; i <= Model.TotalPage; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "disabled" : "")"><a asp-action="Index" asp-route-page="@i" asp-controller="Tag" class="page-link">@i</a></li>
                    }
                    <li class="page-item @(Model.CurrentPage >= Model.TotalPage ? "disabled" : "")"><a class="page-link" asp-route-page="@(Model.CurrentPage +1)" asp-action="Index" asp-controller="Tag">Next</a></li>
                </ul>
            </nav>
        </div>
    </div>
</div>